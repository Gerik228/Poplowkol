function render (
    p_region in apex_plugin.t_region,
    p_plugin in apex_plugin.t_plugin,
    p_is_printer_friendly in boolean
) return apex_plugin.t_region_render_result
is
    l_content clob;
begin
    -- Получаем CLOB по ID
    select des_test
    into l_content
    from BI_PORTAL_FAQ
    where id = :P1_ID;

    -- Выводим разметку через HTP
    htp.p('<div class="wrapper">');
    htp.p('<h1>Моя страница</h1>');
    htp.p('<div id="dynamic-content">');

    if l_content is not null then
        htp.p(l_content);
    else
        htp.p('<p>Нет данных для отображения.</p>');
    end if;

    htp.p('</div>');
    htp.p('</div>');

    return null;
end render;


Отлично! Ты хочешь чисто вручную создать плагин через интерфейс APEX — это правильный и очень профессиональный подход.
Давай тогда сделаем всё пошагово через GUI без скриптов!


---

Пошаговая инструкция: создать Плагин Регион вручную в APEX


---

Шаг 1: Открываем "Shared Components"

1. Перейди в своё приложение в APEX.


2. В левом меню выбери Shared Components.




---

Шаг 2: Создаем новый Plugin

1. В разделе Plugins нажми Create.


2. Выбери Create a Plugin.


3. Тип плагина выбери: Region Type.


4. Нажми Next.




---

Шаг 3: Настройки Плагина

Заполни базовые параметры:


---

Шаг 4: Пишем PL/SQL код рендера

Вставляем в поле PL/SQL Code такой код:

function render (
    p_region in apex_plugin.t_region,
    p_plugin in apex_plugin.t_plugin,
    p_is_printer_friendly in boolean
) return apex_plugin.t_region_render_result
is
    l_content clob;
begin
    -- Получаем CLOB по нужному ID
    select your_clob_column
    into l_content
    from your_table
    where id = :P1_ID; -- Здесь можно поменять на нужный элемент страницы

    -- Выводим HTML с содержимым CLOB
    apex_plugin_util.print_clob_output(
        p_clob => 
            '<div class="wrapper">
                <h1>Моя страница</h1>
                <div id="dynamic-content">' || l_content || '</div>
            </div>'
    );

    return null;
end render;

Важно:

Замени your_table и your_clob_column на свои реальные имена таблицы и столбца!

:P1_ID — это элемент страницы, откуда будет браться ID записи.



---

Шаг 5: Завершаем создание

1. Нажми Create Plugin.


2. Всё, плагин создан!




---

Шаг 6: Используем плагин на странице

1. Открой нужную страницу.


2. Нажми Create Region.


3. В списке источников выбери Plugins -> Dynamic HTML Region.


4. В свойствах региона:

Укажи элемент страницы P1_ID с нужным ID записи.



5. Сохрани.




---

Что в итоге получится:

На странице будет выводиться твоя готовая верстка.

Внутри будет вставлен CLOB (HTML/CSS/JS) из базы.

Никаких ограничений по длине текста.

Работа через сервер, быстро и без лишнего JS.



---

Бонус: Оптимизация на будущее

Если хочешь не зависеть от элемента страницы (P1_ID), можно добавить атрибут Attribute 1 в плагине:

Перейди в настройки своего плагина -> Attributes -> Add Attribute.

Назови атрибут, например, Record ID.


И внутри PL/SQL замени:

where id = apex_plugin_util.get_attribute(p_region.attribute_01);

Тогда при создании региона будешь прямо задавать ID записи через свойства.


---

Хочешь, я тебе ещё подскажу,

как красиво оформить ошибку, если данные не найдены (например, показать "Нет данных для отображения")?
Сказать? Будет аккуратный UX!
Сказать "да"?

