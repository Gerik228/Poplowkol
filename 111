Чтобы сделать адаптивную пагинацию в плагине APEX (например, Template Component), которая будет автоматически подстраиваться под ширину окна, мы можем применить стратегию динамического ограничения количества видимых карточек, а при превышении — показывать кнопку "Далее" или скрывать лишние элементы.


---

Пошаговое решение: адаптивная пагинация без перезагрузки страницы

1. HTML-структура (Report Body):

<div class="cards-container">
  <ul id="news-list">#APEX$ROWS#</ul>
  <div id="pagination-controls"></div>
</div>

2. CSS (адаптивное отображение):

.cards-container ul {
  display: flex;
  overflow-x: auto;
  padding: 0;
  gap: 1rem;
  scroll-behavior: smooth;
  list-style-type: none;
}

.cards-container li {
  flex: 0 0 auto;
  min-width: 280px;
  max-width: 340px;
}


---

3. JS-логика пагинации (через динамическое действие или внизу страницы):

(function() {
  const container = document.getElementById("news-list");
  const items = container.querySelectorAll("li");
  const perPage = calculateItemsPerPage();
  let currentPage = 0;

  function calculateItemsPerPage() {
    const width = window.innerWidth;
    if (width < 600) return 1;
    if (width < 900) return 2;
    if (width < 1200) return 3;
    return 4;
  }

  function showPage(page) {
    const start = page * perPage;
    const end = start + perPage;
    items.forEach((el, idx) => {
      el.style.display = idx >= start && idx < end ? "flex" : "none";
    });
  }

  function renderControls() {
    const totalPages = Math.ceil(items.length / perPage);
    const controls = document.getElementById("pagination-controls");
    controls.innerHTML = "";
    for (let i = 0; i < totalPages; i++) {
      const btn = document.createElement("button");
      btn.textContent = i + 1;
      btn.onclick = () => {
        currentPage = i;
        showPage(currentPage);
      };
      controls.appendChild(btn);
    }
  }

  window.addEventListener("resize", () => {
    const newPerPage = calculateItemsPerPage();
    if (newPerPage !== perPage) {
      currentPage = 0;
      showPage(currentPage);
      renderControls();
    }
  });

  showPage(currentPage);
  renderControls();
})();


---

4. Подключение в APEX:

В "File URLs to Load" подключи .js, если внешний файл.

Или вставь JS в нижнюю часть страницы в разделе "Function and Global Variable Declaration" или "Execute when Page Loads".



---

Что это даёт:

Количество карточек меняется в зависимости от ширины экрана.

Работает в одном регионе APEX без перезагрузки.

Удобно для UX: юзер не теряет контекст при переходе между карточками.



---

Если хочешь, могу сделать тебе плагин с уже встроенной адаптивной пагинацией — с горизонтальным скроллом или кнопками. Хочешь попробовать?

