# Документация: Принцип работы единой страницы для всех дашбордов

## 1. Введение
Единая страница для всех дашбордов реализована для унификации процесса отображения и управления доступом к визуализациям данных. Основная цель системы — предоставить пользователям возможность выбирать дашборды через интерфейс поиска и динамически подгружать контент, сохраняя при этом безопасность и гибкость управления.

---

## 2. Основные компоненты системы

### 2.1 Таблица `bi_portal_map`
Хранит информацию о доступных дашбордах. Структура таблицы:
- **`dashboard_id`** (PK) — уникальный идентификатор дашборда.
- **`dashboard_name`** — наименование дашборда для отображения пользователю.
- **`url_template`** — URL-адрес, по которому доступен дашборд (может содержать параметры).
- **`access_rules`** — правила доступа (например, роли пользователей или группы).

Пример записи:
```sql
INSERT INTO bi_portal_map (dashboard_id, dashboard_name, url_template, access_rules)
VALUES (1, 'Финансовая аналитика', '/dashboards/finance?token=123', 'role_admin,role_finance');
```

---

## 3. Процесс работы системы

### 3.1 Выбор дашборда пользователем
1. Пользователь заходит на страницу поиска дашбордов.
2. Выбирает нужный дашборд из карточек/списка.
3. Система перенаправляет пользователя на **единую шаблонную страницу** (например, `/dashboard/view`) с передачей:
   - `dashboard_id` (через параметры URL: `/dashboard/view?dashboard_id=1`).
   - `dashboard_name` (через скрытое поле или API-запрос).

### 3.2 Загрузка шаблонной страницы
1. На сервере:
   - Полученный `dashboard_id` сохраняется в переменную (например, `$dashboardId`).
   - Выполняется SQL-запрос к таблице `bi_portal_map` для получения `url_template`:
     ```sql
     SELECT url_template, dashboard_name 
     FROM bi_portal_map 
     WHERE dashboard_id = $dashboardId;
     ```
   - Результат сохраняется в переменные (например, `$dashboardUrl`, `$dashboardName`).

2. На клиенте (JavaScript):
   - Вставляется наименование дашборда в шапку страницы:
     ```javascript
     document.getElementById('dashboard-title').innerText = "<?php echo $dashboardName; ?>";
     ```
   - Обновляется заголовок вкладки браузера:
     ```javascript
     document.title = "<?php echo $dashboardName; ?> | BI Portal";
     ```

### 3.3 Вставка URL дашборда
1. URL дашборда динамически вставляется в iframe или редиректится пользователь:
   ```html
   <iframe src="<?php echo $dashboardUrl; ?>" width="100%" height="800px"></iframe>
   ```

---

## 4. Проверка доступа

### 4.1 Бэкенд-валидация
Перед загрузкой контента выполняется проверка прав доступа:
1. Функция `checkAccess($dashboardId, $userId)`:
   - Получает `access_rules` для дашборда из `bi_portal_map`.
   - Сравнивает правила с ролями/правами текущего пользователя.
2. Если доступ запрещён:
   - Перенаправление на страницу ошибки (`/access-denied`).
   - Логирование попытки доступа.

Пример реализации:
```php
function checkAccess(int $dashboardId, string $userId): bool {
    $rules = getAccessRulesFromDB($dashboardId); // ['role_admin', 'role_finance']
    $userRoles = getUserRoles($userId); // ['role_user', 'role_guest']
    return !empty(array_intersect($rules, $userRoles));
}
```

---

## 5. Обработка ошибок
- **Дашборд не найден**: 
  - Отображается сообщение: "Дашборд с ID={$dashboardId} не существует".
  - Логирование ошибки в систему.
- **Ошибка доступа**: 
  - Пользователь перенаправляется на страницу `/access-denied` с указанием причины.
- **Сетевые ошибки**: 
  - Таймаут подключения к дашборду — отображение прелоадера с сообщением "Попробуйте позже".

---

## 6. Преимущества архитектуры
- **Масштабируемость**: Добавление новых дашбордов требует только записи в `bi_portal_map`.
- **Единый интерфейс**: Упрощает навигацию и обучение пользователей.
- **Контроль доступа**: Гибкие правила через `access_rules`.
- **Безопасность**: Централизованная проверка прав на бэкенде.

---

## 7. Диаграмма взаимодействия
```
Пользователь → [Выбор дашборда] → Передача dashboard_id → 
→ [Сервер: Получение URL и проверка прав] → 
→ [Клиент: Отображение дашборда] → 
→ [JavaScript: Обновление заголовка]
```

---

## 8. Заключение
Реализация единой страницы для дашбордов обеспечивает единый UX, централизованное управление доступом и простоту расширения. Для поддержания системы рекомендуется регулярно обновлять записи в таблице `bi_portal_map` и настраивать правила доступа в соответствии с бизнес-требованиями.