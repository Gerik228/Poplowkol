Отлично, теперь всё стало яснее.
Мы реализуем подгрузку HTML из поля des_test таблицы bi_portal_faq по клику в компоненте, чтобы он вставлялся как HTML-контент в блок внутри карточки, и всё это — на Oracle APEX 23.1.0.


---

Пошаговое решение (только для APEX 23.1.0)


---

Шаг 1. Создай AJAX Callback

Где:
Shared Components → Page Processing → AJAX Callback

Имя: GET_FAQ_ANSWER

Тип: PL/SQL Function Returning CLOB

Код:

declare
    l_clob clob;
begin
    select des_test
      into l_clob
      from bi_portal_faq
     where id = :PXX_FAQ_ID;

    return l_clob;
end;

Замените :PXX_FAQ_ID на ваш Page Item (если нет — создадим на следующем шаге).


---

Шаг 2. Создай скрытый элемент страницы

Тип: Hidden
Имя: PXX_FAQ_ID (где XX — номер вашей страницы)
Value Protected: No
(Нужно для передачи ID вопроса при клике)


---

Шаг 3. Настрой HTML-шаблон Template Component

Внутри Template Component, например:

<div class="faq-item" data-faq-id="#ID#">
  <div class="faq-question">#QUESTION#</div>
  <div class="faq-answer" id="faq-answer-#ID#"></div>
</div>


---

Шаг 4. Подключи JavaScript на странице

В "Function and Global Variable Declaration" добавь:

function loadFaqAnswer(faqId) {
    apex.item("PXX_FAQ_ID").setValue(faqId);

    apex.server.process("GET_FAQ_ANSWER", {
        pageItems: "#PXX_FAQ_ID#"
    }, {
        success: function(pData) {
            const answerContainer = document.getElementById("faq-answer-" + faqId);
            answerContainer.innerHTML = pData;
        },
        error: function(jqXHR, textStatus, errorThrown) {
            console.error("Ошибка загрузки FAQ:", textStatus, errorThrown);
        }
    });
}


---

Шаг 5. Навешай обработчик на клик

В "Execute when Page Loads":

document.querySelectorAll(".faq-question").forEach(function(el) {
    el.addEventListener("click", function() {
        const faqItem = el.closest(".faq-item");
        const faqId = faqItem.getAttribute("data-faq-id");
        loadFaqAnswer(faqId);
    });
});


---

Пояснения с учётом APEX 23.1.0:

В 23.1.0 apex.server.process работает стабильно с clob-ответами.

Убедись, что компонент не экранирует HTML — в Template Component должна быть отключена опция Escape Special Characters для #ANSWER#, если она используется.

des_test может содержать полноценный HTML, включая стили, и будет корректно вставлен в DOM.



---

Хочешь — могу выдать готовый рабочий шаблон Template Component под APEX 23.1. с этим поведением.

Хочешь пример с модальным окном или оставить inline-вставку в блок?

