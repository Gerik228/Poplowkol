BEGIN
  -- Удаляем старый джоб, если он уже существует (опционально)
  BEGIN
    DBMS_SCHEDULER.drop_job(job_name => 'CLEAN_INACTIVE_EMPLOYEES_JOB', force => TRUE);
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -27475 THEN
        RAISE;
      END IF;
  END;

  -- Создаём новый джоб
  DBMS_SCHEDULER.create_job (
    job_name        => 'CLEAN_INACTIVE_EMPLOYEES_JOB',
    job_type        => 'PLSQL_BLOCK',
    job_action      => q'[
      BEGIN
        -- 1. Удаление из EMPLOYEES_CURRENT
        DELETE FROM EMPLOYEES_CURRENT
        WHERE EMPLOYEE_ID IN (
          SELECT EMPLOYEE_ID
          FROM EMPLOYEES_HISTORY
          WHERE C_END_DATE IS NOT NULL
        );

        -- 2. Удаление из PROJECT_MEMBERS
        DELETE FROM PROJECT_MEMBERS
        WHERE EMPLOYEE_ID IN (
          SELECT EMPLOYEE_ID
          FROM EMPLOYEES_HISTORY
          WHERE C_END_DATE IS NOT NULL
        );

        -- 3. Удаление из TEAM_MEMBERS
        DELETE FROM TEAM_MEMBERS
        WHERE EMPLOYEE_ID IN (
          SELECT EMPLOYEE_ID
          FROM EMPLOYEES_HISTORY
          WHERE C_END_DATE IS NOT NULL
        );

        -- 4. Удаление из TRAINING_REGISTRATIONS
        DELETE FROM TRAINING_REGISTRATIONS
        WHERE EMPLOYEE_ID IN (
          SELECT EMPLOYEE_ID
          FROM EMPLOYEES_HISTORY
          WHERE C_END_DATE IS NOT NULL
        );

        -- Фиксируем изменения
        COMMIT;
      END;]',
    start_date      => TRUNC(SYSDATE) + INTERVAL '8' HOUR, -- первый запуск сегодня в 8:00
    repeat_interval => 'FREQ=DAILY; BYHOUR=8; BYMINUTE=0; BYSECOND=0', -- ежедневно в 8:00
    enabled         => TRUE,
    comments        => 'Очищает данные уволенных сотрудников из нескольких таблиц'
  );
END;
/