

**Таблица для основного контента:**
```sql
CREATE TABLE rich_text_content (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    title VARCHAR2(500),
    content CLOB,
    created_by VARCHAR2(100) DEFAULT USER,
    created_date DATE DEFAULT SYSDATE,
    updated_by VARCHAR2(100),
    updated_date DATE DEFAULT SYSDATE,
    CONSTRAINT pk_rich_text_content PRIMARY KEY (id)
);
```

**Таблица для изображений:**
```sql
CREATE TABLE rich_text_images (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    content_id NUMBER,
    filename VARCHAR2(500),
    mime_type VARCHAR2(200),
    blob_content BLOB,
    file_size NUMBER,
    created_by VARCHAR2(100) DEFAULT USER,
    created_date DATE DEFAULT SYSDATE,
    CONSTRAINT pk_rich_text_images PRIMARY KEY (id),
    CONSTRAINT fk_rte_content_images 
        FOREIGN KEY (content_id) REFERENCES rich_text_content(id)
        ON DELETE CASCADE
);
```

**Создание индексов для производительности:**
```sql
CREATE INDEX idx_rte_content_created ON rich_text_content(created_date);
CREATE INDEX idx_rte_images_content_id ON rich_text_images(content_id);
```

### Шаг 2: Установка плагина Unleash RichTextEditor

#### 2.1. Скачивание плагина
1. Перейдите на [GitHub репозиторий](https://github.com/RonnyWeiss/APEX-Unleash-RichTextEditor)[8]
2. Скачайте последнюю версию плагина

#### 2.2. Импорт плагина в APEX
1. Войдите в **App Builder** вашего APEX приложения
2. Перейдите в **Shared Components** → **Plug-ins**
3. Нажмите **Import**
4. Загрузите файл плагина (.sql файл)
5. Установите плагин, следуя мастеру импорта

### Шаг 3: Настройка Rich Text Editor

#### 3.1. Создание элементов страницы

**Скрытые элементы для управления:**
```
P1_CONTENT_ID (Hidden) - для хранения ID записи
P1_IMAGE_UPLOAD_URL (Hidden) - URL для загрузки изображений
```

**Rich Text Editor элемент:**
```
P1_CONTENT (Rich Text Editor)
- Format: HTML (обязательно!)
- Editor: TinyMCE (по умолчанию в APEX 23.1)
```

#### 3.2. Настройка TinyMCE с поддержкой изображений

В **Initialization JavaScript Function** элемента P1_CONTENT:

```javascript
function(options) {
    // Включить плагин для работы с изображениями
    options.editorOptions.plugins += " image imagetools";
    options.editorOptions.toolbar += " image";
    
    // Настройка загрузки изображений
    options.editorOptions.images_upload_handler = function (blobInfo, progress) {
        return new Promise(function (resolve, reject) {
            const xhr = new XMLHttpRequest();
            const apexSession = apex.env.APP_SESSION;
            const contentId = apex.item('P1_CONTENT_ID').getValue();
            
            xhr.withCredentials = false;
            xhr.open('POST', 'f?p=' + apex.env.APP_ID + ':' + 
                     apex.env.APP_PAGE_ID + ':' + apexSession + 
                     ':PLUGIN=UNLEASH_RTE_UPLOAD');
            
            xhr.upload.onprogress = function (e) {
                progress(e.loaded / e.total * 100);
            };
            
            xhr.onload = function () {
                if (xhr.status === 403) {
                    reject({ message: 'HTTP Error: ' + xhr.status, remove: true });
                    return;
                }
                
                if (xhr.status < 200 || xhr.status >= 300) {
                    reject('HTTP Error: ' + xhr.status);
                    return;
                }
                
                const json = JSON.parse(xhr.responseText);
                if (!json || typeof json.location !== 'string') {
                    reject('Invalid JSON: ' + xhr.responseText);
                    return;
                }
                
                resolve(json.location + '?session=' + apexSession);
            };
            
            xhr.onerror = function () {
                reject('Image upload failed due to XHR Transport error');
            };
            
            const formData = new FormData();
            formData.append('file', blobInfo.blob(), blobInfo.filename());
            formData.append('content_id', contentId);
            
            xhr.send(formData);
        });
    };
    
    // Отключить относительные URL
    options.editorOptions.relative_urls = false;
    options.editorOptions.convert_urls = false;
    
    // Дополнительные настройки безопасности
    options.editorOptions.extended_valid_elements = "img[class|src|border=0|alt|title|hspace|vspace|width|height|align|onmouseover|onmouseout|name|data-*]";
    
    return options;
}
```

### Шаг 4: Создание Dynamic Actions

#### 4.1. Dynamic Action для загрузки контента

**Настройки Dynamic Action:**
- Name: `Load RTE Content`
- When: Page Load
- Action: Unleash RichTextEditor [Plug-In]

**Атрибуты плагина:**
```
Affected Elements: P1_CONTENT
Action: Load CLOB into RTE
CLOB Source: SQL Query
SQL Query:
```

```sql
SELECT content, id
FROM rich_text_content
WHERE id = :P1_CONTENT_ID
```

**Дополнительные настройки:**
- Enable Image Handling: Yes
- Sanitize HTML: Yes
- Remove Dangerous HTML: Yes

#### 4.2. Dynamic Action для сохранения контента

**Настройки Dynamic Action:**
- Name: `Save RTE Content`
- When: Before Submit (Page Processing)
- Action: Unleash RichTextEditor [Plug-In]

**Атрибуты плагина:**
```
Affected Elements: P1_CONTENT
Action: Save RTE Content to CLOB
Processing Type: Automatic Processing
```

**PL/SQL код для сохранения:**
```sql
DECLARE
    l_content_id NUMBER := :P1_CONTENT_ID;
    l_content CLOB := :P1_CONTENT;
BEGIN
    IF l_content_id IS NULL THEN
        -- Создание новой записи
        INSERT INTO rich_text_content (
            title,
            content,
            created_by,
            created_date
        ) VALUES (
            'Новый документ',
            l_content,
            :APP_USER,
            SYSDATE
        ) RETURNING id INTO l_content_id;
        
        :P1_CONTENT_ID := l_content_id;
    ELSE
        -- Обновление существующей записи
        UPDATE rich_text_content 
        SET content = l_content,
            updated_by = :APP_USER,
            updated_date = SYSDATE
        WHERE id = l_content_id;
    END IF;
END;
```

### Шаг 5: Настройка загрузки изображений

#### 5.1. Создание процедуры загрузки изображений

```sql
CREATE OR REPLACE PROCEDURE upload_rte_image (
    p_content_id IN NUMBER,
    p_filename IN VARCHAR2,
    p_mime_type IN VARCHAR2,
    p_blob_content IN BLOB,
    p_image_id OUT NUMBER
) AS
BEGIN
    INSERT INTO rich_text_images (
        content_id,
        filename,
        mime_type,
        blob_content,
        file_size,
        created_by,
        created_date
    ) VALUES (
        p_content_id,
        p_filename,
        p_mime_type,
        p_blob_content,
        DBMS_LOB.GETLENGTH(p_blob_content),
        V('APP_USER'),
        SYSDATE
    ) RETURNING id INTO p_image_id;
    
    COMMIT;
END;
/
```

#### 5.2. Dynamic Action для загрузки изображений

**Настройки:**
- When: Custom Event = `rte_image_upload`
- Action: Execute PL/SQL Code

**PL/SQL код:**
```sql
DECLARE
    l_image_id NUMBER;
BEGIN
    upload_rte_image(
        p_content_id => :P1_CONTENT_ID,
        p_filename => :APEX$FILE_NAME,
        p_mime_type => :APEX$MIME_TYPE,
        p_blob_content => :APEX$FILE_CONTENT,
        p_image_id => l_image_id
    );
    
    -- Возврат URL для вставки в редактор
    apex_json.open_object;
    apex_json.write('location', 'f?p=' || :APP_ID || ':0:' || :APP_SESSION || 
                   ':APPLICATION_PROCESS=GET_IMAGE:::P0_IMAGE_ID:' || l_image_id);
    apex_json.close_object;
END;
```

#### 5.3. Application Process для отображения изображений

**Создание Application Process:**
- Name: `GET_IMAGE`
- Point: Ajax Callback

**PL/SQL код:**
```sql
DECLARE
    l_blob BLOB;
    l_mime_type VARCHAR2(200);
    l_filename VARCHAR2(500);
BEGIN
    SELECT blob_content, mime_type, filename
    INTO l_blob, l_mime_type, l_filename
    FROM rich_text_images
    WHERE id = :P0_IMAGE_ID;
    
    -- Установка заголовков
    owa_util.mime_header(l_mime_type, FALSE);
    htp.p('Content-Length: ' || DBMS_LOB.GETLENGTH(l_blob));
    htp.p('Content-Disposition: inline; filename="' || l_filename || '"');
    owa_util.http_header_close;
    
    -- Вывод BLOB
    wpg_docload.download_file(l_blob);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        owa_util.status_line(404, 'Not Found');
END;
```

### Шаг 6: Оптимизация для Oracle 19c

#### 6.1. Настройки для работы с большими CLOB

```sql
-- Для обработки CLOB больше 32K в APEX 23.1
ALTER SESSION SET "_OPTIMIZER_USE_FEEDBACK" = FALSE;

-- Оптимизация параметров LOB
ALTER SYSTEM SET DB_SECUREFILE = 'PREFERRED' SCOPE=BOTH;
```

#### 6.2. Создание функции для безопасной обработки HTML

```sql
CREATE OR REPLACE FUNCTION sanitize_html(p_html IN CLOB) 
RETURN CLOB AS
    l_clean_html CLOB;
BEGIN
    -- Базовая очистка HTML в Oracle 19c
    l_clean_html := REGEXP_REPLACE(p_html, '<script[^>]*>.*?</script>', '', 1, 0, 'i');
    l_clean_html := REGEXP_REPLACE(l_clean_html, '<iframe[^>]*>.*?</iframe>', '', 1, 0, 'i');
    l_clean_html := REGEXP_REPLACE(l_clean_html, 'javascript:', '', 1, 0, 'i');
    l_clean_html := REGEXP_REPLACE(l_clean_html, 'on\w+\s*=', '', 1, 0, 'i');
    
    RETURN l_clean_html;
END;
/
```

### Шаг 7: Тестирование функциональности

#### 7.1. Проверка базовой функциональности
1. Создайте тестовую страницу с настроенным RTE
2. Попробуйте ввести текст и сохранить
3. Проверьте загрузку сохраненного контента

#### 7.2. Тестирование загрузки изображений
1. Перетащите изображение в редактор
2. Проверьте сохранение в таблице `rich_text_images`
3. Убедитесь в корректном отображении изображения

#### 7.3. Проверка производительности
```sql
-- Мониторинг размеров LOB сегментов
SELECT s.owner, 
       d.table_name, 
       d.column_name, 
       s.segment_name, 
       ROUND(s.bytes/1024/1024, 2) as size_mb,
       s.tablespace_name
FROM DBA_SEGMENTS s, DBA_LOBS d
WHERE s.segment_name IN (d.segment_name, d.index_name)
  AND s.owner = d.owner
  AND d.owner = 'YOUR_SCHEMA'
  AND d.table_name IN ('RICH_TEXT_CONTENT', 'RICH_TEXT_IMAGES');
```

## Решение возможных проблем

### Проблема 1: Ошибки с CLOB больше 32K
**Решение для APEX 23.1:**
```sql
-- В процедуре обработки использовать
APEX_UTIL.SET_SESSION_STATE('P1_CONTENT', l_large_clob);
```

### Проблема 2: Изображения не сохраняются
**Проверьте:**
- Права на создание директорий
- Размер временных файлов
- Настройки ORDS для обработки multipart/form-data

### Проблема 3: Производительность при больших объемах
**Оптимизация:**
```sql
-- Партиционирование таблиц изображений по дате
ALTER TABLE rich_text_images 
MODIFY PARTITION BY RANGE (created_date)
INTERVAL(NUMTOYMINTERVAL(1, 'MONTH'));
```

## Заключение

Данная конфигурация обеспечивает полную функциональность APEX Unleash RichTextEditor в среде Oracle APEX 23.1 с базой данных Oracle 19c[8][1][2]. Плагин позволяет:

- Работать с CLOB любого размера
- Автоматически сохранять перетаскиваемые изображения как BLOB
- Обеспечивать безопасность через санитизацию HTML
- Использовать все возможности TinyMCE в APEX 23.1

Все компоненты оптимизированы для работы с Oracle 19c и используют современные возможности APEX 23.1 для обеспечения максимальной производительности и безопасности.

Цитаты:
[1] BLOB_TO_CLOB Function - API Reference https://docs.oracle.com/en/database/oracle/apex/23.1/aeapi/BLOB_TO_CLOB-Function.html
[2] What's New in Oracle APEX 23.1 https://apex.oracle.com/en/platform/features/whats-new-231/
[3] Oracle APEX 23.1 - TinyMCE Rich Text Editor https://lmoreaux.hashnode.dev/oracle-apex-231-tinymce
[4] CLOB_TO_BLOB Function - API Reference https://docs.oracle.com/en/database/oracle/apex/23.1/aeapi/CLOB_TO_BLOB-Function.html
[5] Rich Text Editor Pro v23.2 - An Introduction - United Codes Blog https://blog.united-codes.com/post/rich-text-editor-pro-v232-an-introduction
[6] Создание пользователей - SQL для Oracle https://sql-oracle.ru/sozdanie-polzovatelej.html
[7] Создание нового пользователя / схемы в ORACLE. Какие права ... https://www.youtube.com/watch?v=lw_gny4zoEI
[8] This plug-in for Oracle APEX unleashs the RichTextEditor! - GitHub https://github.com/RonnyWeiss/APEX-Unleash-RichTextEditor
[9] Installation | Rich Text Editor Pro for Oracle APEX - United Codes https://www.united-codes.com/products/plug-ins-pro/docs/rich-text-editor-pro/getting-started-installation/
[10] APEX 23.1 Rich Text Editor auto resize - Oracle Forums https://forums.oracle.com/ords/apexds/post/apex-23-1-rich-text-editor-auto-resize-9423
[11] How to convert CLOB to BLOB - Caglar's Oracle Blog https://www.oracleplsqltr.com/2023/11/16/how-to-convert-clob-to-blob/
[12] TinyMCE - Oracle APEX 23.1 New Feature - YouTube https://www.youtube.com/watch?v=-6EXYVS4p5U
[13] 11. Using CLOB, BLOB, NCLOB, and BFILE Data https://python-oracledb.readthedocs.io/en/latest/user_guide/lob_data.html
[14] Oracle APEX 23.1 TinyMCE Rich Text Editor image upload https://lmoreaux.hashnode.dev/oracle-apex-231-tinymce-image-upload
[15] Oracle APEX 23.1 Known Issues https://www.oracle.com/tools/downloads/apex-downloads/apex-231-known-issues/
[16] toolbar_sticky option in RichText TinyMCE Oracle APEX https://stackoverflow.com/questions/78470138/toolbar-sticky-option-in-richtext-tinymce-oracle-apex
[17] Oracle Apex - should I use Empty_BLOB() or null? - Stack Overflow https://stackoverflow.com/questions/50295957/oracle-apex-should-i-use-empty-blob-or-null
[18] [PDF] ORTL at a glance: A new Rich Text Editor for Oracle APEX | nlOUG https://nloug.nl/wp-content/uploads/2025/04/ORTL-at-a-glance-a-new-rich-text-editor-for-Oracle-APEX.pdf
[19] Plug-Ins - apex.world https://apex.world/ords/r/apex_world/apex-world/plug-ins
[20] External Tables Containing LOB Data - Oracle Base https://oracle-base.com/articles/10g/external-tables-containing-lob-data
[21] Release Notes - Oracle APEX https://apex.oracle.com/en/learn/documentation/release-notes/
[22] Rich text Editor using TinyMCE(Moxiecode Content Editor) in Oracle ... https://doyensys.com/blogs/rich-text-editor-using-tinymcemoxiecode-content-editor-in-oracle-apex-23-1/
[23] TinyMCE Custom Buttons - APEX 23.1 - Oracle Forums https://forums.oracle.com/ords/apexds/post/tinymce-custom-buttons-1319
[24] Опыт использования таблиц с LOB-столбцами https://www.fors.ru/upload/magazine/09/http_text/miheichev_20140224_LOB1.html
[25] Урок 4. Создание пользователей в Oracle APEX 19.1. Простая ... https://www.youtube.com/watch?v=XFOhHwXxqRQ
[26] Большие двоичные объекты (LOB) Oracle - ADO.NET https://learn.microsoft.com/ru-ru/dotnet/framework/data/adonet/oracle-lobs
[27] How to add a new font family in TinyMCE for Apex 23.1 https://stackoverflow.com/questions/77252420/how-to-add-a-new-font-family-in-tinymce-for-apex-23-1
[28] О работе с большими объектами в СУБД Oracle - /привет/мир/etc http://torofimofu.blogspot.com/2015/05/oracle.html
[29] Настройка пользователей и групп https://docs.oracle.com/cloud/help/ru/content-cloud/CECSA/GUID-405F67FF-3CF6-43F8-A02A-F09A2A88D5A0.htm
[30] DDL / DML для FIRST_VALUE — Oracle PL/SQL https://oracleplsql.ru/ddl-dml-for-example-first_value.html
[31] Туториал по Oracle Application Express. Обзор IDE - Habr https://habr.com/ru/articles/445128/
[32] 15 DDL and DML Statements with LOBs - Oracle Help Center https://docs.oracle.com/cd/E11882_01/appdev.112/e18294/adlob_ddl.htm
[33] [PDF] Oracle® APEX - Installation Guide https://docs.oracle.com/en/database/oracle/apex/23.1/htmig/oracle-apex-installation-guide.pdf
[34] Преобразование BLOB в текст в Oracle SQL - Skypro https://sky.pro/wiki/sql/preobrazovanie-blob-v-tekst-v-oracle-sql-podrobnoe-rukovodstvo/
[35] Как настроить постраничную авторизацию в Oracle APEX - rtportal https://rtportal.ru/index.php/stati/109-oracle-apex-page-auth
