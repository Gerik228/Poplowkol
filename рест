Отлично, давай сделаем реализацию через RESTful Web Service (ORDS) — это даст тебе красивые, постоянные и простые ссылки вида:

https://example.com/ords/hr/images/42

Где 42 — ID изображения, images — REST endpoint, а hr — schema alias.


---

Пошаговая инструкция: Постоянный URL через ORDS REST Endpoint


---

Шаг 1: Убедись, что ORDS включен для схемы

Если ты используешь APEX на базе ORDS (обычно это так), схема должна быть опубликована как REST-enabled.

Проверка:

select enabled from user_ords_schemas where schema = user;

Если enabled = 'YES', то всё ок.

Если нет:

begin
  ords.enable_schema(p_enabled => true, p_schema => 'HR', p_url_mapping_type => 'BASE_PATH', p_url_mapping_pattern => 'hr');
end;

Заменить 'HR' на свою схему.


---

Шаг 2: Таблица с изображениями

create table product_images (
  id         number generated always as identity primary key,
  name       varchar2(255),
  image_blob blob,
  mime_type  varchar2(255),
  image_url  varchar2(1000)
);


---

Шаг 3: Создай REST Module

begin
  ords.define_module(
    p_module_name    => 'images',
    p_base_path      => '/images/',
    p_items_per_page => 0
  );
end;


---

Шаг 4: Создай шаблон с параметром :id

begin
  ords.define_template(
    p_module_name => 'images',
    p_pattern     => ':id'
  );
end;


---

Шаг 5: Создай REST handler, который отдает BLOB

begin
  ords.define_handler(
    p_module_name   => 'images',
    p_pattern       => ':id',
    p_method        => 'GET',
    p_source_type   => ords.source_type_plsql,
    p_source        => q'[
      declare
        l_blob blob;
        l_mime varchar2(255);
      begin
        select image_blob, mime_type
        into l_blob, l_mime
        from product_images
        where id = :id;

        owa_util.mime_header(l_mime, false);
        htp.p('Content-length: ' || dbms_lob.getlength(l_blob));
        htp.p('Content-Disposition: inline; filename="img_' || :id || '"');
        htp.p('');
        owa_util.http_header_close;

        wpg_docload.download_file(l_blob);
      end;
    ]',
    p_items_per_page => 0
  );
end;


---

Шаг 6: Сформируй URL

Формат:

https://<your-domain>/ords/<schema-alias>/images/<id>

Пример:

https://example.com/ords/hr/images/42


---

Шаг 7: Обновляй колонку image_url при вставке

create or replace trigger trg_product_images_biu
before insert or update on product_images
for each row
begin
  :new.image_url := 'https://example.com/ords/hr/images/' || :new.id;
end;

Заменить:

example.com — на твой домен

hr — на alias схемы

images — на имя модуля



---

Шаг 8: Тестируй!

Загрузи запись с BLOB, и переход по ссылке из image_url откроет картинку напрямую.


---

Дополнительно (по желанию):

Можно добавить проверку, существует ли id

Можно ограничить доступ к endpoint через OAuth2 или роли ORDS

Можно выводить 404 ошибку, если не найден BLOB



---

Хочешь, я подготовлю тебе весь SQL-скрипт одним блоком? Или экспорт REST-модуля в формате JSON для импорта в ORDS?

