Отлично, давай разберёмся конкретно и точно.


---

Ты видишь ошибку, потому что используешь PL/SQL функцию apex_util.get_blob_file_src в SQL.

Эта функция не поддерживается в SQL напрямую, только в PL/SQL (например, в Dynamic Action, Process или Function Returning SQL Query).


---

Правильный способ получить URL BLOB в SQL (и APEX 23.1 это поддерживает) — через виртуальную колонку с формированием URL вручную:

select
    id,
    title,
    description,
    dbms_lob.getlength(image) as image_size,
    'wwv_flow_file_mgr.get_file?p_security_group_id=' || apex_application.g_flow_security_group_id ||
    '&p_fname=' || id || '_image' as image_url
from news_test

Но это костыль и требует настройки APEX для обслуживания BLOB через wwv_flow_file_mgr.


---

Рекомендуемый способ — использовать APEX автоматическую поддержку BLOB колонок в Report/Card/Region.

Если ты:

Создаешь Interactive Report, Card, или Classic Report

И хочешь отображать изображение из BLOB


Тогда не пиши SQL руками. Просто:

1. Используй мастер создания региона (например, Cards)

Укажи таблицу NEWS_TEST

Укажи поле IMAGE как колонку с BLOB

APEX сам подставит правильный apex_util.get_blob_file_src и сгенерирует URL за кулисами.


2. Или создай отдельный Application Process (например, GETIMAGE)

Сделай Process:

declare
    l_mime  varchar2(255);
    l_blob  blob;
    l_name  varchar2(200);
begin
    select mime_type, image, filename
    into l_mime, l_blob, l_name
    from news_test
    where id = :P5_ID;

    sys.htp.init;
    owa_util.mime_header(l_mime, false);
    htp.p('Content-length: ' || dbms_lob.getlength(l_blob));
    htp.p('Content-Disposition: filename="' || l_name || '"');
    owa_util.http_header_close;
    wpg_docload.download_file(l_blob);
    apex_application.stop_apex_engine;
end;

И генерируй ссылку:

select
    id,
    title,
    description,
    'f?p=&APP_ID.:0:&SESSION.:APPLICATION_PROCESS=GETIMAGE:::P5_ID:' || id as image_url
from news_test


---

Хочешь, я сделаю с нуля рабочий пример с твоей таблицей NEWS_TEST?

