Отлично, давай сделаем всё вручную с нуля в APEX, чтобы ты точно понял, как это работает и мог повторить в любом приложении.


---

Цель:

Показ изображений, хранящихся в таблице (в виде BLOB), только внутри одного APEX-приложения.
Изображения будут доступны по ссылке:

f?p=112:100:::NO::P100_ID=<ID>


---

Полная инструкция по шагам (для APEX 23.1)

1. Создай таблицу для изображений

Если ещё не создана:

create table product_images (
  id         number generated always as identity primary key,
  name       varchar2(255),
  image_blob blob,
  mime_type  varchar2(255)
);

Можно добавить записи через форму или вручную. Главное — заполнить image_blob и mime_type (image/jpeg, image/png и т.п.).


---

2. Создай страницу-хендлер (стр. 100)

В APEX Builder:

1. Открой App Builder → выбери приложение 112


2. Нажми Create > Page


3. Тип страницы: Blank Page


4. Page Number: 100


5. Имя: Get Image


6. Finish




---

3. Добавь hidden item P100_ID

В Page Designer:

1. В левой части, Items → +


2. Тип: Hidden


3. Имя: P100_ID


4. Source Type: Always, replacing any existing value in session state


5. Save




---

4. Добавь PL/SQL-процесс, который отдаёт изображение

1. В разделе Processing → +


2. Тип: PL/SQL


3. Имя: Download Image


4. Execution Point: Before Header


5. Код:



declare
  l_blob blob;
  l_mime varchar2(255);
begin
  select image_blob, mime_type
    into l_blob, l_mime
    from product_images
   where id = :P100_ID;

  owa_util.mime_header(l_mime, false);
  htp.p('Content-length: ' || dbms_lob.getlength(l_blob));
  htp.p('Content-Disposition: inline; filename="image_' || :P100_ID || '"');
  htp.p('');
  owa_util.http_header_close;

  wpg_docload.download_file(l_blob);
  apex_application.stop_apex_engine;
end;

6. Нажми Save и Run




---

5. Готово! Как использовать

Теперь ты можешь вставлять в любой HTML, отчёт, карточку:

<img src="f?p=112:100:::NO::P100_ID=1">

Или формировать ссылку на изображение в SQL:

select
  id,
  name,
  'f?p=112:100:::NO::P100_ID=' || id as image_url
from product_images;


---

6. (Опционально) Добавить колонку image_url в таблицу

alter table product_images add (image_url varchar2(1000));

И автоматически заполнять при вставке:

create or replace trigger trg_image_url
before insert or update on product_images
for each row
begin
  :new.image_url := 'f?p=112:100:::NO::P100_ID=' || :new.id;
end;


---

Проверка

1. Вставь изображение в таблицу (можно через File Browse на другой форме)


2. Перейди по ссылке:

https://your-domain/ords/f?p=112:100:::NO::P100_ID=1

(Заменить your-domain на свой)



Изображение отобразится в браузере.


---

Хочешь дальше:

Сделать страницу загрузки изображений?

Или интерактивный отчёт с превью и ссылками?


Готов продолжать шаг за шагом.

